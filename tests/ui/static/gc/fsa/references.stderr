error: The drop method for `HasRef<'_>` cannot be safely finalized.
  --> $DIR/references.rs:25:13
   |
LL |         use_val(self.a); // should fail
   |                 ------
   |                 |
   |                 a finalizer cannot safely dereference this `&u64`
   |                 because it might not live long enough.
...
LL |     Gc::new(HasRef::default());
   |     --------^^^^^^^^^^^^^^^^^- caused by trying to construct a `Gc<HasRef<'_>>` here.
   |
   = help: `Gc` may run finalizers after the valid lifetime of this reference.

error: The drop method for `HasRef<'_>` cannot be safely finalized.
  --> $DIR/references.rs:25:13
   |
LL |         use_val(self.c[0]); // should fail
   |                 ---------
   |                 |
   |                 a finalizer cannot safely use this `[&u64; 2]`
   |                 from a drop method because it does not implement `FinalizerSafe`.
...
LL |     Gc::new(HasRef::default());
   |     --------^^^^^^^^^^^^^^^^^- caused by trying to construct a `Gc<HasRef<'_>>` here.
   |
   = help: `Gc` runs finalizers on a separate thread, so drop methods
           must only use values whose types implement `FinalizerSafe`.

error: The drop method for `HasRef<'_>` cannot be safely finalized.
  --> $DIR/references.rs:25:13
   |
LL |         let a = self.a; // should fail
   |                 ------
   |                 |
   |                 a finalizer cannot safely dereference this `&u64`
   |                 because it might not live long enough.
...
LL |     Gc::new(HasRef::default());
   |     --------^^^^^^^^^^^^^^^^^- caused by trying to construct a `Gc<HasRef<'_>>` here.
   |
   = help: `Gc` may run finalizers after the valid lifetime of this reference.

error: The drop method for `HasRef<'_>` cannot be safely finalized.
  --> $DIR/references.rs:25:13
   |
LL |         let c = self.c;
   |                 ------
   |                 |
   |                 a finalizer cannot safely use this `[&u64; 2]`
   |                 from a drop method because it does not implement `FinalizerSafe`.
...
LL |     Gc::new(HasRef::default());
   |     --------^^^^^^^^^^^^^^^^^- caused by trying to construct a `Gc<HasRef<'_>>` here.
   |
   = help: `Gc` runs finalizers on a separate thread, so drop methods
           must only use values whose types implement `FinalizerSafe`.

error: The drop method for `HasRef<'_>` cannot be safely finalized.
  --> $DIR/references.rs:25:13
   |
LL |         use_val(c[1]); // should fail
   |                 ----
   |                 |
   |                 a finalizer cannot safely dereference this `&u64`
   |                 because it might not live long enough.
...
LL |     Gc::new(HasRef::default());
   |     --------^^^^^^^^^^^^^^^^^- caused by trying to construct a `Gc<HasRef<'_>>` here.
   |
   = help: `Gc` may run finalizers after the valid lifetime of this reference.

error: aborting due to 5 previous errors

